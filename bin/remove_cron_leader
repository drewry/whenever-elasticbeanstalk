#!/usr/bin/ruby

require           'rubygems'
gem               'aws-sdk'
require           'aws-sdk'
require           'erb'

EB_CONFIG_APP_SUPPORT = ENV['EB_CONFIG_APP_SUPPORT']
ENVIRONMENT_NAME_FILE = File.join(EB_CONFIG_APP_SUPPORT,'env_name')

instance_id = if File.exists?(File.join(EB_CONFIG_APP_SUPPORT,'instance_id'))
  	File.read(File.join(EB_CONFIG_APP_SUPPORT,'instance_id'))
  else
  	if id = `/opt/aws/bin/ec2-metadata -i | awk '{print $2}'`.strip
  		File.open(File.join(EB_CONFIG_APP_SUPPORT,'instance_id'), 'w') {|f| f.write(id) }
  		id
  	end
  end
availability_zone = `/opt/aws/bin/ec2-metadata -z | awk '{print $2}'`.strip
region            =  availability_zone.slice(0..availability_zone.length-2)

ec2 = Aws::EC2::Resource.new(credentials: Aws::Credentials.new(ENV['EC2_KEY'], ENV['EC2_SECRET']), region: region)

environment_name = if File.exists?(ENVIRONMENT_NAME_FILE)
  File.read(ENVIRONMENT_NAME_FILE)
else
	env_name = ec2.instances[instance_id].tags["elasticbeanstalk:environment-name"]
	File.open(ENVIRONMENT_NAME_FILE, 'w') {|f| f.write(env_name) }
	env_name
end

leader_instances = []
ec2.instances.each do |i|
  if i.state.name == "running"
    is_environment = false
    is_leader      = false

    # iterate through the tags
    i.tags.each do |tag|
      if tag.key == "elasticbeanstalk:environment-name" and tag.value == environment_name
        is_environment = true
      end
      if tag.key == "leader" and tag.value == "true"
        is_leader = true
      end
    end

    leader_instances << i.id if is_environment and is_leader
  end
end

if leader_instances.count > 1 && leader_instances.include?(instance_id)
  ec2.instances(instance_ids: [instance_id]).first.create_tags({
    tags: [
      {
        key: "leader",
        value: "false"
      }
    ]
  })
end

`/usr/local/bin/bundle exec setup_cron`
